{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mdel",
				"modelnames"
			],
			[
				"model",
				"modelnames"
			],
			[
				"mod",
				"model3"
			],
			[
				"mo",
				"model2"
			],
			[
				"han",
				"Handle	 ƒ"
			],
			[
				"B",
				"BWData	struct ʈ"
			],
			[
				"vec",
				"vector	[]int ν"
			],
			[
				"token",
				"tokens	 ν"
			],
			[
				"sc",
				"ScanWords	advance int, token []byte, err error ƒ"
			],
			[
				"fp",
				"Fprint	n int, err error ƒ"
			],
			[
				"statusba",
				"StatusBadRequest	 Ɩ"
			],
			[
				"status",
				"StatusOK	 Ɩ"
			],
			[
				"wri",
				"WriteHeader	 ƒ"
			],
			[
				"dat",
				"Data	struct ʈ"
			],
			[
				"data",
				"datafile"
			],
			[
				"res",
				"resp2	*http.Request ν"
			],
			[
				"print",
				"Println	 ƒ"
			],
			[
				"Rea",
				"ReadAll	[]byte, error ƒ"
			],
			[
				"resp",
				"resp2	*http.Response ν"
			],
			[
				"Po",
				"PostForm	resp *http.Response, err error ƒ"
			],
			[
				"prin",
				"Println	n int, err error ƒ"
			],
			[
				"pr",
				"Println	 ƒ"
			],
			[
				"in",
				"IndexByte	int ƒ"
			],
			[
				"ind",
				"IndexByte	int ƒ"
			],
			[
				"j_",
				"j_username	 ν"
			],
			[
				"for",
				"formEndMark	[]byte ν"
			],
			[
				"Prin",
				"Println	n int, err error ƒ"
			],
			[
				"main",
				"func main	func main {...} ʂ"
			],
			[
				"get",
				"getCallHandler"
			],
			[
				"em",
				"employeeLevel"
			],
			[
				"emp",
				"employeeLevels"
			],
			[
				"Print",
				"Println	n int, err error ƒ"
			],
			[
				"Ex",
				"ExecuteTemplate	error ƒ"
			],
			[
				"tmp",
				"templ	*template.Template ν"
			],
			[
				"na",
				"navNone	 Ɩ"
			],
			[
				"e",
				"ExecuteTemplate	error ƒ"
			],
			[
				"temp",
				"templ	*template.Template ν"
			],
			[
				"Respon",
				"ResponseWriter	interface ¡"
			],
			[
				"title",
				"titlekey	 Ɩ"
			],
			[
				"respon",
				"ResponseWriter	interface ¡"
			],
			[
				"reson",
				"ResponseWriter	interface ¡"
			],
			[
				"sci",
				"sciSlice	[]string ν"
			],
			[
				"str",
				"str	string ν"
			],
			[
				"snap",
				"standardPost	post.Post ν"
			],
			[
				"p",
				"Println	n int, err error ƒ"
			],
			[
				"esca",
				"escapeMark	 Ɩ"
			],
			[
				"de",
				"defaultTag	 Ɩ"
			],
			[
				"t",
				"Tag	string ν"
			],
			[
				"defa",
				"defaultAuthor	 Ɩ"
			],
			[
				"def",
				"defaultTitle	 Ɩ"
			],
			[
				"co",
				"sciConcurrent	struct ʈ"
			],
			[
				"sciCon",
				"sciConcurrent	struct ʈ"
			],
			[
				"bod",
				"bodyend	int ν"
			],
			[
				"bo",
				"bodyIndex	int ν"
			],
			[
				"w",
				"WriteString	n int, err error ƒ"
			],
			[
				"body",
				"bodyIndex	int ν"
			],
			[
				"s",
				"String	string ƒ"
			],
			[
				"head",
				"headend	int ν"
			],
			[
				"wr",
				"WriteString	n int, err error ƒ"
			],
			[
				"W",
				"WriteRune	n int, err error ƒ"
			],
			[
				"err",
				"ErrPostSciMarkNotMatch	error ν"
			],
			[
				"ma",
				"markdown	bytes.Buffer ν"
			],
			[
				"b",
				"Buffer	struct ʈ"
			],
			[
				"ERR",
				"ErrPostMissBorE	error ν"
			],
			[
				"n",
				"Now	time.Time ƒ"
			],
			[
				"key",
				"keytitle	 Ɩ"
			],
			[
				"Err",
				"ErrPostMissBorE	error ν"
			],
			[
				"epo",
				"epilogue	int ν"
			],
			[
				"me",
				"MediaLink	string ν"
			],
			[
				"st",
				"storage	 package ρ"
			],
			[
				"ret",
				"ret3	[]post.Post ν"
			],
			[
				"next",
				"next2	bool ν"
			],
			[
				"ne",
				"next	 ν"
			],
			[
				"buil",
				"buildQueryKey	string ƒ"
			],
			[
				"it",
				"item	*memcache.Item ν"
			],
			[
				"Post",
				"PostItem	struct ʈ"
			],
			[
				"postk",
				"postkey	*datastore.Key, *datastore.Key, *datastore.Key ƒ"
			],
			[
				"pos",
				"PostItem	struct ʈ"
			],
			[
				"Pos",
				"PostItem	struct ʈ"
			],
			[
				"contentm",
				"contentmdkey	*datastore.Key ν"
			],
			[
				"conten",
				"contentmd	PostContent ν"
			],
			[
				"content",
				"contentmdkey	*datastore.Key ν"
			],
			[
				"item",
				"itemkey	 ν"
			],
			[
				"contentmd",
				"contentmdkey	*datastore.Key ν"
			],
			[
				"contentk",
				"contentkey	*datastore.Key ν"
			],
			[
				"con",
				"contentmd	PostContent ν"
			],
			[
				"cont",
				"contentmd	*PostContent ν"
			],
			[
				"Erro",
				"Errorf	 ƒ"
			],
			[
				"fa",
				"Fatal	 ƒ"
			],
			[
				"S",
				"Second	 Ɩ"
			],
			[
				"Fa",
				"Fatal	 ƒ"
			],
			[
				"ite",
				"itemkey	*datastore.Key ν"
			],
			[
				"has",
				"HasSuffix	bool ƒ"
			],
			[
				"Ha",
				"HasSuffix	bool ƒ"
			],
			[
				"cone",
				"contentkey	*datastore.Key ν"
			],
			[
				"T",
				"Title	string ν"
			],
			[
				"imp",
				"import	import (...) ʂ"
			],
			[
				"Ti",
				"Time	struct ʈ"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"package ",
				"Package Control: Install Package"
			],
			[
				"package control in",
				"Package Control: Install Package"
			],
			[
				"package control ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: Install Package",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwModel/ModelA.jl",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwModel/Go_Julia_Interaction/jlserver.jl",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/.BlockWorldServer.sublime-project",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwRouter/logger.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwModel/test/test.jl",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwModel/test/launchjl.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwModel/test/ModelA.jl",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwModel/test/test.data",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwModel/bwModel.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwModel/ModelA.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwModel/ModelSample.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/main.go",
		"/Users/xiaojunpeng/Downloads/subjsontoai.json",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwRouter/handlers.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/app.yaml",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwRouter/router.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwStruct/bwStruct.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/sampleJSON/input.json",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/sampleJSON/output.json",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwModel/processor.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/bwRouter/routes.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/blockworld.sublime-project",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/test/datastruct/datastruct.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/test/main.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/test/struct/datastruct.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/test/struct/struct.go",
		"/Users/xiaojunpeng/workspace/GroundedLanguage/BlockWorld/ModelA_data.py",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/processor.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/handlers.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/input.json",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/routes.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/output.json",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/logger.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/data.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/BlockWorldServer/todo.go",
		"/Users/xiaojunpeng/workspace/GroundedLanguage/BlockWorldServer/main.go",
		"/Users/xiaojunpeng/workspace/GroundedLanguage-master/SemanticParsing/ModelA/ModelA-S-T-RP-RNN-minibatch.jl",
		"/Users/xiaojunpeng/workspace/GroundedLanguage-master/BlockWorldServer/predict.jl",
		"/Users/xiaojunpeng/Desktop/571HW5shell",
		"/Users/xiaojunpeng/Downloads/input.json",
		"/Users/xiaojunpeng/workspace/GroundedLanguage-master/BlockWorld/MNIST/PartialSequences/Dev.orig.output.json",
		"/Users/xiaojunpeng/workspace/GroundedLanguage-master/BlockWorld/MNIST/PartialSequences/Dev.orig.input.json",
		"/Users/xiaojunpeng/workspace/GroundedLanguage-master/BlockWorld/MNIST/SimpleActions/digits/Test.input.orig.json",
		"/Users/xiaojunpeng/workspace/GroundedLanguage-master/BlockWorld/MNIST/FullSequences/Test.output.orig.json",
		"/Users/xiaojunpeng/workspace/GroundedLanguage-master/BlockWorld/MNIST/FullSequences/Test.input.orig.json",
		"/Users/xiaojunpeng/workspace/GroundedLanguage-master/BlockWorld/MNIST/FullSequences/Dev.output.orig.json",
		"/Users/xiaojunpeng/workspace/GroundedLanguage-master/BlockWorld/MNIST/FullSequences/Dev.input.orig.json",
		"/Users/xiaojunpeng/workspace/GroundedLanguage-master/BlockWorld/DataCreation/AddSceneToTurk.py",
		"/Users/xiaojunpeng/Documents/USC/USCTerm2/CSci571/HW4/stationslist2.xml",
		"/Users/xiaojunpeng/Documents/USC/USCTerm2/CSci545/homework1.tex",
		"/Users/xiaojunpeng/Documents/USC/USCTerm2/CSci571/HW4/invalid.xml",
		"/Users/xiaojunpeng/Documents/USC/USCTerm2/CSci571/HW4/stationslist.xml",
		"/Users/xiaojunpeng/Documents/USC/USCTerm2/CSci571/HW3/index.html",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/database/database.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/server/server.go",
		"/Users/xiaojunpeng/Documents/USC/USCTerm2/CSci571/public/golb.html",
		"/Users/xiaojunpeng/workspace/test/test.go",
		"/Users/xiaojunpeng/workspace/test/test.html",
		"/Users/xiaojunpeng/Desktop/8.2.cpp",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/tonyshaw/GoSpell/model/app.yaml",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/server/template/template.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/server/template.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/template/template.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/template/template.html",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/post/post.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/postprocessor/postprocessor.go",
		"/Users/xiaojunpeng/workspace/journey-master/templates/helperfunctions.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/datacache/datacache.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/server/app.yaml",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/SamplePost.md",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/postprocessor/postprocessor_test.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/database/database_test.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/datastorage/datastorage.go",
		"/Users/xiaojunpeng/workspace/dinghy/dinghy/dinghy.go",
		"/Users/xiaojunpeng/Library/Application Support/Sublime Text 2/Packages/GoSublime/CHANGELOG.md",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/datacache/datacache_test.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/README.md",
		"/Users/xiaojunpeng/workspace/GOpload-master/upload.go",
		"/datastorage.go",
		"/datastorage",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/memcache/memcache.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/Post/post.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/Database/database.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/Post/Post.go",
		"/Users/xiaojunpeng/workspace/GoSpell-master/database/database.go",
		"/Users/xiaojunpeng/workspace/gowork/src/github.com/junpengxiao/Golb/Post/Post",
		"/Users/xiaojunpeng/Library/Application Support/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/Users/xiaojunpeng/workspace/journey-master/database/initialization.go",
		"/Users/xiaojunpeng/workspace/journey-master/main.go",
		"/Users/xiaojunpeng/workspace/goblogcool-master/mdbook/model/post/new.go",
		"/Users/xiaojunpeng/workspace/goblogcool-master/mdbook/init.go",
		"/Users/xiaojunpeng/workspace/goblogcool-master/mdbook/views/views.go",
		"/Users/xiaojunpeng/workspace/goblogcool-master/mdbook/model/post/post.go",
		"/Users/xiaojunpeng/workspace/goblogcool-master/mdbook/model/post/path.go",
		"/Users/xiaojunpeng/workspace/goblogcool-master/mdbook/model/post/get.go",
		"/Users/xiaojunpeng/workspace/goblogcool-master/admin/base.tpl",
		"/Users/xiaojunpeng/workspace/goblogcool-master/app.yaml",
		"/Users/xiaojunpeng/workspace/goblogcool-master/upload.bat",
		"/Users/xiaojunpeng/workspace/blogByGo-master/app/app.go",
		"/Users/xiaojunpeng/workspace/blogByGo-master/app/post.go",
		"/Users/xiaojunpeng/workspace/dinghy/app.yaml",
		"/Users/xiaojunpeng/Downloads/blogByGo-master/app.yaml",
		"/Users/xiaojunpeng/workspace/sloth-master/app/handlers.py",
		"/Users/xiaojunpeng/workspace/sloth-master/app/config.py.sample",
		"/Users/xiaojunpeng/workspace/sloth-master/main.py",
		"/Users/xiaojunpeng/workspace/sloth-master/lib/bottle.py",
		"/Users/xiaojunpeng/workspace/sloth-master/lib/middlewares.py",
		"/Users/xiaojunpeng/workspace/sloth-master/app/__init__.py",
		"/Users/xiaojunpeng/workspace/sloth-master/index.yaml",
		"/Users/xiaojunpeng/workspace/python-blog-system-master/main.py",
		"/Users/xiaojunpeng/workspace/python-blog-system-master/app.yaml",
		"/Users/xiaojunpeng/workspace/python-blog-system-master/index.yaml",
		"/Users/xiaojunpeng/workspace/sloth-master/app.yaml",
		"/Users/xiaojunpeng/workspace/go-blog-gae-master/server.go",
		"/Users/xiaojunpeng/workspace/go-blog-gae-master/newpost.bat",
		"/Users/xiaojunpeng/workspace/go-blog-gae-master/data/posts.json",
		"/Users/xiaojunpeng/workspace/go-blog-gae-master/data/pages.json",
		"/Users/xiaojunpeng/workspace/go-blog-gae-master/config/app.json",
		"/Users/xiaojunpeng/workspace/go-blog-gae-master/app.yaml",
		"/Users/xiaojunpeng/workspace/dinghy/dinghy/atom.go",
		"/Users/xiaojunpeng/workspace/dinghy/dinghy/markdown.go",
		"/Users/xiaojunpeng/workspace/dinghy/index.yaml",
		"/Users/xiaojunpeng/workspace/blogplus/src/cron.yaml",
		"/Users/xiaojunpeng/workspace/myapp/app.yaml"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"usage",
			",0.1,",
			"]",
			"\"id\":\\d+,\"loc\":\\[",
			"\\\"id\\\"\\:?,\\\"loc\\\":\\[",
			"\"id\":?,\"loc\":[",
			"\\},\\{",
			"},{",
			"editdistance",
			"compile",
			"sponehot",
			"log",
			"ErrPostMissBorE",
			"ctx",
			"appengine",
			"chan",
			"time",
			"{ ",
			"Lead",
			"Description",
			"query",
			"database",
			"postExt",
			"getPosts",
			"input_name",
			"self.app",
			"Bottle(",
			"run(",
			"handler",
			"quickGet",
			"memcache",
			"view",
			"filter_entries",
			"AuthHandler",
			"run(",
			"default_app",
			"default_app()",
			"AppStack",
			"default_app",
			"markdown"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			",",
			"",
			"\\n"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 161.0,
	"status_bar_visible": true
}
